import { useState } from "react";
import Link from "next/link";

export default function IssueCertificate() {
	const [formData, setFormData] = useState({
		certificateId: "",
		university: "",
		studentName: "",
		course: "",
		date: "",
	});
	const [message, setMessage] = useState("");

	const handleChange = (e) => {
		setFormData({ ...formData, [e.target.name]: e.target.value });
	};

	const handleSubmit = async (e) => {
		e.preventDefault();
		setMessage("");
		try {
			const res = await fetch("http://localhost:4000/api/issue", {
				method: "POST",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify(formData),
			});
			const data = await res.json();
			if (res.ok) {
				setMessage("Certificate issued successfully!");
				setFormData({
					certificateId: "",
					university: "",
					studentName: "",
					course: "",
					date: "",
				});
			} else {
				setMessage(data.error || "Error issuing certificate");
			}
		} catch (error) {
			setMessage("Network error: " + error.message);
		}
	};

	return (
		<div style={{ maxWidth: 600, margin: "auto", padding: 20 }}>
			<h1>Issue Certificate</h1>
			<form onSubmit={handleSubmit}>
				<label>
					Certificate ID:
					<input
						type="text"
						name="certificateId"
						value={formData.certificateId}
						onChange={handleChange}
						required
					/>
				</label>
				<br />
				<label>
					University:
					<input
						type="text"
						name="university"
						value={formData.university}
						onChange={handleChange}
						required
					/>
				</label>
				<br />
				<label>
					Student Name:
					<input
						type="text"
						name="studentName"
						value={formData.studentName}
						onChange={handleChange}
						required
					/>
				</label>
				<br />
				<label>
					Course:
					<input
						type="text"
						name="course"
						value={formData.course}
						onChange={handleChange}
						required
					/>
				</label>
				<br />
				<label>
					Date of Issue:
					<input
						type="date"
						name="date"
						value={formData.date}
						onChange={handleChange}
						required
					/>
				</label>
				<br />
				<button type="submit">Issue Certificate</button>
				<Link href="/verify">Verify Certificate</Link>
			</form>
			{message && <p>{message}</p>}
		</div>
	);
}
